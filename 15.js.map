{"version":3,"sources":["webpack:///./src/components/NormalButton/NormalButton.tsx","webpack:///./src/components/PlainButton/PlainButton.tsx","webpack:///./src/views/DemoButton.tsx"],"names":["props","btnRef","SplitLine","title","className","type","ref","onClick","e","console","info","plain","language","style","androidstudio","round","block","disabled","size"],"mappings":"6IAyCe,MAnCf,SAAsBA,GACpB,IAAMC,EACJ,mBACF,OACE,gCACE,cAACC,EAAA,EAAS,CAACC,MAAO,sBAAe,GACjC,cAAC,IAAM,eACLC,UAAW,cACXC,KAAM,UACNC,IAAKL,EACLM,QAAS,SAACC,GACRC,QAAQC,KAAKF,KACd,8BAIH,cAAC,IAAM,eAACJ,UAAW,cAAeC,KAAM,UAAQ,6BAGhD,cAAC,IAAM,eAACD,UAAW,cAAeC,KAAM,WAAS,8BAGjD,cAAC,IAAM,eAACD,UAAW,cAAeC,KAAM,QAAM,2BAG9C,cAAC,IAAM,eAACD,UAAW,cAAeC,KAAM,WAAS,8BAGjD,cAAC,IAAM,eAACD,UAAW,cAAeC,KAAM,WAAS,qCAExC,ICJA,MA1Bf,SAAqBL,GACnB,OACE,gCACE,cAACE,EAAA,EAAS,CAACC,MAAO,qBAAc,GAChC,cAAC,IAAM,eAACC,UAAW,cAAeC,KAAM,UAAWM,OAAK,uCAGxD,cAAC,IAAM,eAACP,UAAW,cAAeC,KAAM,SAAUM,OAAK,sCAGvD,cAAC,IAAM,eAACP,UAAW,cAAeC,KAAM,UAAWM,OAAK,uCAGxD,cAAC,IAAM,eAACP,UAAW,cAAeC,KAAM,OAAQM,OAAK,oCAGrD,cAAC,IAAM,eAACP,UAAW,cAAeC,KAAM,UAAWM,OAAK,uCAGxD,cAAC,IAAM,eAACP,UAAW,cAAeC,KAAM,UAAWM,OAAK,8CAE/C,I,kBC+DA,UApDf,SAAoBX,GAClB,OACE,gCACE,cAACE,EAAA,EAAS,CAACC,MAAO,eAAQ,GAC1B,cAACD,EAAA,EAAS,CAACC,MAAO,cAAO,GACzB,cAAC,IAAiB,eAACS,SAAU,aAAcC,MAAOC,EAAA,GAAa,UAlCpD,yjBAmCA,GAEX,cAAC,EAAY,WACb,cAACZ,EAAA,EAAS,CAACC,MAAO,qBAAc,GAChC,cAAC,IAAM,eAACC,UAAW,cAAeC,KAAM,UAAWU,OAAO,GAAI,4BAG9D,cAAC,IAAM,eACLX,UAAW,cACXC,KAAM,UACNU,OAAO,EACPC,OAAO,GAAI,kCAIb,cAACd,EAAA,EAAS,CAACC,MAAO,wBAAiB,GACnC,cAAC,IAAM,eAACC,UAAW,cAAeC,KAAM,UAAWY,UAAQ,EAACF,OAAO,GAAI,uCAGvE,cAAC,IAAM,eAACX,UAAW,cAAeC,KAAM,SAAUY,UAAQ,EAACF,OAAO,GAAI,sCAGtE,cAAC,IAAM,eAACX,UAAW,cAAeC,KAAM,UAAWY,UAAQ,EAACN,OAAK,gDAGjE,cAAC,EAAW,WACZ,cAACT,EAAA,EAAS,CAACC,MAAO,oBAAa,GAC/B,cAAC,IAAM,eAACC,UAAW,cAAeC,KAAM,UAAWa,KAAM,QAAM,mCAG/D,cAAC,IAAM,eAACd,UAAW,cAAeC,KAAM,UAAWa,KAAM,UAAQ,qCAGjE,cAAC,IAAM,eACLd,UAAW,cACXC,KAAM,SACNa,KAAM,QACNF,OAAK,EACLD,OAAK,yDAGE","file":"15.js","sourcesContent":["import { createElement, useRef, MutableRefObject } from \"react\";\nimport { Button } from \"@hs\";\nimport SplitLine from \"@/components/SplitLine/SplitLine\";\n\nexport declare interface NromalButtonProps {}\n\nfunction NormalButton(props: NromalButtonProps) {\n  const btnRef =\n    useRef<HTMLButtonElement>() as MutableRefObject<HTMLButtonElement>;\n  return (\n    <div>\n      <SplitLine title={\"normal button\"}></SplitLine>\n      <Button\n        className={\"demo-button\"}\n        type={\"primary\"}\n        ref={btnRef}\n        onClick={(e) => {\n          console.info(e);\n        }}\n      >\n        primary\n      </Button>\n      <Button className={\"demo-button\"} type={\"danger\"}>\n        danger\n      </Button>\n      <Button className={\"demo-button\"} type={\"success\"}>\n        success\n      </Button>\n      <Button className={\"demo-button\"} type={\"info\"}>\n        info\n      </Button>\n      <Button className={\"demo-button\"} type={\"warning\"}>\n        warning\n      </Button>\n      <Button className={\"demo-button\"} type={\"default\"}>\n        default\n      </Button>\n    </div>\n  );\n}\n\nexport default NormalButton;\n","import { createElement } from \"react\";\nimport { Button } from \"@hs\";\nimport SplitLine from \"@/components/SplitLine/SplitLine\";\n\nexport declare interface PlainButtonProps {}\n\nfunction PlainButton(props: PlainButtonProps) {\n  return (\n    <div>\n      <SplitLine title={\"plain button\"}></SplitLine>\n      <Button className={\"demo-button\"} type={\"primary\"} plain>\n        plain primary\n      </Button>\n      <Button className={\"demo-button\"} type={\"danger\"} plain>\n        plain danger\n      </Button>\n      <Button className={\"demo-button\"} type={\"success\"} plain>\n        plain success\n      </Button>\n      <Button className={\"demo-button\"} type={\"info\"} plain>\n        plain info\n      </Button>\n      <Button className={\"demo-button\"} type={\"warning\"} plain>\n        plain warning\n      </Button>\n      <Button className={\"demo-button\"} type={\"default\"} plain>\n        plain default\n      </Button>\n    </div>\n  );\n}\n\nexport default PlainButton;\n","import SplitLine from \"../components/SplitLine/SplitLine\";\nimport { Button } from \"@hs\";\nimport NormalButton from \"@/components/NormalButton/NormalButton\";\nimport PlainButton from \"@/components/PlainButton/PlainButton\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { androidstudio } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport declare interface DemoButtonProps {}\n\nconst propsStr = `interface ButtonProps {\n  type?: types;\n  children?: ReactNode;\n  className?: string | Array<string>;\n  style?: CSSProperties;\n  onClick?: (e: MouseEvent<HTMLButtonElement>) => any;\n  /**\n   * 是否是块级元素（is block element）\n   */\n  block?: boolean;\n  /**\n   * 是否需要圆形按钮（is round button）\n   */\n  round?: boolean;\n  /**\n   * 按钮原生type（button native type）\n   */\n  nativeType?: \"submit\" | \"reset\" | \"button\";\n  disabled?: boolean;\n  /**\n   * 是否是朴素按钮  is plain button\n   */\n  plain?: boolean;\n  /**\n   * 按钮尺寸 button size\n   */\n  size?: sizes;\n}`;\n\nfunction DemoButton(props: DemoButtonProps) {\n  return (\n    <div>\n      <SplitLine title={\"button\"}></SplitLine>\n      <SplitLine title={\"props\"}></SplitLine>\n      <SyntaxHighlighter language={\"typescript\"} style={androidstudio}>\n        {propsStr}\n      </SyntaxHighlighter>\n      <NormalButton></NormalButton>\n      <SplitLine title={\"round button\"}></SplitLine>\n      <Button className={\"demo-button\"} type={\"primary\"} round={true}>\n        Round\n      </Button>\n      <Button\n        className={\"demo-button\"}\n        type={\"primary\"}\n        round={true}\n        block={true}\n      >\n        Block Round\n      </Button>\n      <SplitLine title={\"disabled button\"}></SplitLine>\n      <Button className={\"demo-button\"} type={\"primary\"} disabled round={true}>\n        disabled primary\n      </Button>\n      <Button className={\"demo-button\"} type={\"danger\"} disabled round={true}>\n        disabled danger\n      </Button>\n      <Button className={\"demo-button\"} type={\"primary\"} disabled plain>\n        plain disabled primary\n      </Button>\n      <PlainButton></PlainButton>\n      <SplitLine title={\"button size\"}></SplitLine>\n      <Button className={\"demo-button\"} type={\"primary\"} size={\"mini\"}>\n        mini primary\n      </Button>\n      <Button className={\"demo-button\"} type={\"warning\"} size={\"normal\"}>\n        normal warning\n      </Button>\n      <Button\n        className={\"demo-button\"}\n        type={\"danger\"}\n        size={\"large\"}\n        block\n        round\n      >\n        large block round danger\n      </Button>\n    </div>\n  );\n}\n\nexport default DemoButton;\n"],"sourceRoot":""}