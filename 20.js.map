{"version":3,"sources":["webpack:///./src/views/DemoNoticeBar/DemoNoticeBar.tsx"],"names":["DemoNoticeBar","props","title","language","style","type","showClose","onMsgClick","console","info","closeNode","onClose","displayName","COM_PREFIX"],"mappings":"mMAqBA,SAASA,EAAcC,GACrB,OACE,gCACE,cAAC,IAAS,CAACC,MAAO,kBAAW,GAC7B,cAAC,IAAS,CAACA,MAAO,cAAO,GACzB,cAAC,IAAiB,eAACC,SAAU,aAAcC,MAAO,KAAa,UAnBpD,4TAoBA,GAEX,cAAC,IAAS,0BACV,cAAC,IAAS,eAACC,KAAM,WAAS,2BAC1B,cAAC,IAAS,eAACA,KAAM,UAAQ,2BACzB,cAAC,IAAS,eAACA,KAAM,WAAS,2BAC1B,cAAC,IAAS,eAACA,KAAM,WAAS,2BAC1B,cAAC,IAAS,eAACA,KAAM,OAAQC,WAAW,GAAI,2BAGxC,cAAC,IAAS,eACRC,WAAY,kBAAMC,QAAQC,KAAK,WAC/BJ,KAAM,UACNC,WAAW,EACXI,UAAW,KACXC,QAAS,kBAAMH,QAAQC,KAAK,WAAQ,kCAG1B,IAKlB,SAAUT,GACG,EAAAY,YAAA,gBADb,CAAUZ,MAAa,KAIhB,IAAMa,EAAa,gBAEX","file":"20.js","sourcesContent":["import { NoticeBar } from \"@hs\";\nimport SplitLine from \"@/components/SplitLine/SplitLine\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { androidstudio } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport declare interface IDemoNoticeBarProps {}\n\nconst propsStr = `interface INoticeBarProps {\n  type?: types;\n  className?: string;\n  maskClassName?: string;\n  bodyClassName?: string;\n  msgClassName?: string;\n  closeClassName?: string;\n  showClose?: boolean;\n  closeNode?: ReactChild;\n  onClose?: () => any;\n  onMsgClick?: () => any;\n  children?: ReactChild;\n}`;\n\nfunction DemoNoticeBar(props: IDemoNoticeBarProps) {\n  return (\n    <div>\n      <SplitLine title={\"noticeBar\"}></SplitLine>\n      <SplitLine title={\"props\"}></SplitLine>\n      <SyntaxHighlighter language={\"typescript\"} style={androidstudio}>\n        {propsStr}\n      </SyntaxHighlighter>\n      <NoticeBar>测试广播</NoticeBar>\n      <NoticeBar type={\"primary\"}>测试广播</NoticeBar>\n      <NoticeBar type={\"danger\"}>测试广播</NoticeBar>\n      <NoticeBar type={\"success\"}>测试广播</NoticeBar>\n      <NoticeBar type={\"warning\"}>测试广播</NoticeBar>\n      <NoticeBar type={\"info\"} showClose={true}>\n        测试广播\n      </NoticeBar>\n      <NoticeBar\n        onMsgClick={() => console.info(\"点击了消息体\")}\n        type={\"warning\"}\n        showClose={true}\n        closeNode={\"关闭\"}\n        onClose={() => console.info(\"点击了关闭\")}\n      >\n        测试广播\n      </NoticeBar>\n    </div>\n  );\n}\n\nnamespace DemoNoticeBar {\n  export let displayName: string = `DemoNoticeBar`;\n}\n\nexport const COM_PREFIX = `DemoNoticeBar`;\n\nexport default DemoNoticeBar;\n"],"sourceRoot":""}